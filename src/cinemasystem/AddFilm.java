/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cinemasystem;

import java.awt.Window;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import CinemaClasses.Film;
import CinemaClasses.JTextFieldLimit;

/**
 *
 * @author christophermclaughlin
 */
public class AddFilm extends javax.swing.JFrame {

    /**
     * Creates new form AddFilm
     */
    public AddFilm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TitleTextField1 = new javax.swing.JTextField();
        TitleLabel = new javax.swing.JLabel();
        addBt = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        PgRatingLabel = new javax.swing.JLabel();
        GenreLabel = new javax.swing.JLabel();
        PgRatingCB = new javax.swing.JComboBox<>();
        GenrejTextField = new javax.swing.JTextField();
        DurationjTextField = new javax.swing.JTextField();
        DurationLabel = new javax.swing.JLabel();
        ActorjTextField = new javax.swing.JTextField();
        ActorLabel = new javax.swing.JLabel();
        DirectorjTextField = new javax.swing.JTextField();
        DirectorLabel = new javax.swing.JLabel();
        LinkLabel = new javax.swing.JLabel();
        LinkjTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Add Film");

        TitleTextField1.setForeground(new java.awt.Color(204, 204, 204));
        TitleTextField1.setText("Film Title");

        TitleLabel.setText("Film Title");

        addBt.setText("Add");
        addBt.setPreferredSize(new java.awt.Dimension(89, 29));
        
        addBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        
        TitleTextField1.addFocusListener(new FocusListener() {
        	public void focusGained(FocusEvent e) {
        		titleTFfocusGained(e);
        
        	}

			@Override
			public void focusLost(FocusEvent e) {
				titleTFfocusLost(e);
				
			}
        });
        
        GenrejTextField.addFocusListener(new FocusListener() {
        	public void focusGained(FocusEvent e) {
        		genreTFfocusGained(e);
        
        	}

			@Override
			public void focusLost(FocusEvent e) {
				genreTFfocusLost(e);
				
			}
        });
        
        DurationjTextField.addFocusListener(new FocusListener() {
        	public void focusGained(FocusEvent e) {
        		durationTFfocusGained(e);
        
        	}

			@Override
			public void focusLost(FocusEvent e) {
				durationTFfocusLost(e);
				
			}
        });

        ActorjTextField.addFocusListener(new FocusListener() {
        	public void focusGained(FocusEvent e) {
        		actorTFfocusGained(e);
        
        	}

			@Override
			public void focusLost(FocusEvent e) {
				actorTFfocusLost(e);
				
			}
        });
        
        DirectorjTextField.addFocusListener(new FocusListener() {
        	public void focusGained(FocusEvent e) {
        		directorTFfocusGained(e);
        
        	}

			@Override
			public void focusLost(FocusEvent e) {
				directorTFfocusLost(e);
				
			}
        });
        
        LinkjTextField.addFocusListener(new FocusListener() {
        	public void focusGained(FocusEvent e) {
        		ytTFfocusGained(e);
        
        	}

			@Override
			public void focusLost(FocusEvent e) {
				ytTFfocusLost(e);
				
			}
        });
        
        DurationjTextField.addKeyListener(new KeyListener() {
        	public void keyTyped(KeyEvent e) {
        		durationTFkeyTyped(e);
        	}

			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
        });
        
        PgRatingLabel.setText("PG - Rating");

        GenreLabel.setText("Genre");

       // PgRatingCB.setForeground(new java.awt.Color(204, 204, 204));
        PgRatingCB.setModel(new DefaultComboBoxModel<>(new String[] {"Select Rating", "U", "PG", "12A", "12", "15", "15A", "18"}));

        GenrejTextField.setForeground(new java.awt.Color(204, 204, 204));
        GenrejTextField.setText("Genre");

        DurationjTextField.setDocument(new JTextFieldLimit(3));
        DurationjTextField.setForeground(new java.awt.Color(204, 204, 204));
        DurationjTextField.setText("Min");

        DurationLabel.setText("Duration (mins)");

        ActorjTextField.setForeground(new java.awt.Color(204, 204, 204));
        ActorjTextField.setText("Actor");

        ActorLabel.setText("Actor");
        
        DirectorjTextField.setForeground(new java.awt.Color(204, 204, 204));
        DirectorjTextField.setText("Director");

        DirectorLabel.setText("Director");

        LinkLabel.setText("Youtube Link");

        LinkjTextField.setForeground(new java.awt.Color(204, 204, 204));
        LinkjTextField.setText("Youtube Link");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TitleLabel)
                                    .addComponent(PgRatingLabel)
                                    .addComponent(GenreLabel)
                                    .addComponent(DurationLabel)
                                    .addComponent(ActorLabel)
                                    .addComponent(DirectorLabel)
                                    .addComponent(LinkLabel))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TitleTextField1)
                                    .addComponent(PgRatingCB)
                                    .addComponent(GenrejTextField)
                                    .addComponent(DurationjTextField)
                                    .addComponent(ActorjTextField)
                                    .addComponent(DirectorjTextField)
                                    .addComponent(LinkjTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))))
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleLabel)
                    .addComponent(TitleTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PgRatingLabel)
                    .addComponent(PgRatingCB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenreLabel)
                    .addComponent(GenrejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DurationjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DurationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActorLabel)
                    .addComponent(ActorjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)		
                	
                		.addComponent(DirectorLabel)
                    .addComponent(DirectorjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)		
                    
                		.addComponent(LinkLabel)
                    .addComponent(LinkjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
       JComponent comp = (JComponent) evt.getSource();
         Window win = SwingUtilities.getWindowAncestor(comp);
         win.dispose(); 
    }//GEN-LAST:event_CancelActionPerformed
    
    private void addBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
       String title, rating, genre, durationString, actor, director, ytLink;
       int duration = 0;
       title = TitleTextField1.getText();
       rating = PgRatingCB.getSelectedItem().toString();
   	   genre = GenrejTextField.getText();
   	   durationString = DurationjTextField.getText();
   	   try {
   		duration = Integer.parseInt(durationString);
   	   }catch(Exception e) {
      
   	   }
   	  // duration = Integer.parseInt(durationString);
   	   actor = ActorjTextField.getText();
   	   director = DirectorjTextField.getText();
   	   ytLink = LinkjTextField.getText();
   	   
   	   if(title.equals("Film Title")) {
   		JOptionPane.showMessageDialog(null,  "Please enter a vaild Film Title");
   	   }
   	   else if(rating.equals("Select Rating")) {
   		JOptionPane.showMessageDialog(null,  "Please enter a vaild Rating");
   	   }
   	   else if(genre.equals("Genre")) {
   		JOptionPane.showMessageDialog(null,  "Please enter a vaild Genre");
   	   }
   	   else if(durationString.equals("Min") || duration < 60 || duration > 300) {
   		JOptionPane.showMessageDialog(null,  "Please enter a vaild Duration\nPlease note films are never shorter than 60 minutes\nor longer than 300 minutes");
   	   }
   	   else if(actor.equals("Actor")) {
   		JOptionPane.showMessageDialog(null,  "Please enter vaild Actor/s name");
   	   }
   	   else if(ytLink.equals("Youtube Link")) {
   		JOptionPane.showMessageDialog(null,  "Please enter a vaild Youtube link");
   	   }
   	   else {
   		Film newFilm = new Film(title, rating, genre, duration, actor, director, ytLink); 
		
   		newFilm.addFilmToDB();
   		
   		JOptionPane.showMessageDialog(null,  "Film sucessfull added");

   	   }
    }
    
    private void titleTFfocusGained(FocusEvent e) {
    	if(TitleTextField1.getText().equals("Film Title")) {
    		TitleTextField1.setText("");
    	}
    	
    }
    
    private void titleTFfocusLost(FocusEvent e) {
    	if(TitleTextField1.getText().equals("")) {
    		TitleTextField1.setText("Film Title");
    	}
    	
    }
    
  
    
    private void genreTFfocusGained(FocusEvent e) {
    	if(GenrejTextField.getText().equals("Genre")) {
    		GenrejTextField.setText("");
    	}
    	
    }
    
    private void genreTFfocusLost(FocusEvent e) {
    	if(GenrejTextField.getText().equals("")) {
    		GenrejTextField.setText("Genre");
    	}
    	
    }
    
    private void durationTFfocusGained(FocusEvent e) {
    	if(DurationjTextField.getText().equals("Min")) {
    		DurationjTextField.setText("");
    	}
    	
    }
    
    private void durationTFfocusLost(FocusEvent e) {
    	if(DurationjTextField.getText().equals("")) {
    		DurationjTextField.setText("Min");
    	}
    	
    }
    
    private void actorTFfocusGained(FocusEvent e) {
    	if(ActorjTextField.getText().equals("Actor")) {
    		ActorjTextField.setText("");
    	}
    	
    }
    
    private void actorTFfocusLost(FocusEvent e) {
    	if(ActorjTextField.getText().equals("")) {
    		ActorjTextField.setText("Actor");
    	}
    	
    }
    
    private void directorTFfocusGained(FocusEvent e) {
    	if(DirectorjTextField.getText().equals("Director")) {
    		DirectorjTextField.setText("");
    	}
    	
    }
    
    private void directorTFfocusLost(FocusEvent e) {
    	if(DirectorjTextField.getText().equals("")) {
    		DirectorjTextField.setText("Director");
    	}
    	
    }


    private void ytTFfocusGained(FocusEvent e) {
    	if(LinkjTextField.getText().equals("Youtube Link")) {
    		LinkjTextField.setText("");
    	}
    	
    }
    
    private void ytTFfocusLost(FocusEvent e) {
    	if(LinkjTextField.getText().equals("")) {
    		LinkjTextField.setText("Youtube Link");
    	}
    }
    
    private void durationTFkeyTyped(KeyEvent e) {
    	char c = e.getKeyChar();
    	if(!(Character.isDigit(c)) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE) {
    		e.consume();
    	}
    	
    }
    	
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFilm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ActorLabel;
    private javax.swing.JTextField ActorjTextField;
    private javax.swing.JButton Cancel;
    private javax.swing.JLabel DirectorLabel;
    private javax.swing.JTextField DirectorjTextField;
    private javax.swing.JLabel DurationLabel;
    private javax.swing.JTextField DurationjTextField;
    private javax.swing.JLabel GenreLabel;
    private javax.swing.JTextField GenrejTextField;
    private javax.swing.JLabel LinkLabel;
    private javax.swing.JTextField LinkjTextField;
    private javax.swing.JLabel PgRatingLabel;
    private javax.swing.JComboBox PgRatingCB;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JTextField TitleTextField1;
    private javax.swing.JButton addBt;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
