package cinemasystem;

import java.awt.Window;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import CinemaClasses.Film;
import CinemaClasses.JTextFieldLimit;
import java.awt.Font;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JTextField;
import java.awt.Color;
import javax.swing.JButton;

public class EditFilm extends javax.swing.JFrame {
	
	
	public EditFilm() {
    initComponents();
}
	
	  

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    TitleTextField1 = new javax.swing.JTextField();
    TitleTextField1.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    TitleLabel = new javax.swing.JLabel();
    TitleLabel.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    editBt = new javax.swing.JButton();
    editBt.setFont(new Font("Lucida Grande", Font.PLAIN, 32));
    Cancel = new javax.swing.JButton();
    Cancel.setFont(new Font("Lucida Grande", Font.PLAIN, 32));
    PgRatingLabel = new javax.swing.JLabel();
    PgRatingLabel.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    GenreLabel = new javax.swing.JLabel();
    GenreLabel.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    PgRatingCB = new javax.swing.JComboBox<>();
    PgRatingCB.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    GenrejTextField = new javax.swing.JTextField();
    GenrejTextField.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    DurationjTextField = new javax.swing.JTextField();
    DurationjTextField.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    DurationLabel = new javax.swing.JLabel();
    DurationLabel.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    ActorjTextField = new javax.swing.JTextField();
    ActorjTextField.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    ActorLabel = new javax.swing.JLabel();
    ActorLabel.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    DirectorjTextField = new javax.swing.JTextField();
    DirectorjTextField.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    DirectorLabel = new javax.swing.JLabel();
    DirectorLabel.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    LinkLabel = new javax.swing.JLabel();
    LinkLabel.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    LinkjTextField = new javax.swing.JTextField();
    LinkjTextField.setFont(new Font("Lucida Grande", Font.PLAIN, 39));

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setFont(new Font("Lucida Grande", Font.BOLD, 32)); // NOI18N
    jLabel1.setForeground(new java.awt.Color(255, 0, 0));
    jLabel1.setText("Edit Film");

    TitleTextField1.setForeground(new java.awt.Color(204, 204, 204));
   // String title = AdminPage.getTitle();
   // TitleTextField1.setText("");
    TitleTextField1.setEditable(false);

    TitleLabel.setText("Film Title");

    editBt.setText("Edit");
    editBt.setPreferredSize(new java.awt.Dimension(89, 29));
    
    editBt.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addBtActionPerformed(evt);
        }
    });

    Cancel.setText("Cancel");
    Cancel.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            CancelActionPerformed(evt);
        }
    });
    
    
    GenrejTextField.addFocusListener(new FocusListener() {
    	public void focusGained(FocusEvent e) {
    		genreTFfocusGained(e);
    
    	}

		@Override
		public void focusLost(FocusEvent e) {
			genreTFfocusLost(e);
			
		}
    });
    
    DurationjTextField.addFocusListener(new FocusListener() {
    	public void focusGained(FocusEvent e) {
    		durationTFfocusGained(e);
    
    	}

		@Override
		public void focusLost(FocusEvent e) {
			durationTFfocusLost(e);
			
		}
    });

    ActorjTextField.addFocusListener(new FocusListener() {
    	public void focusGained(FocusEvent e) {
    		actorTFfocusGained(e);
    
    	}

		@Override
		public void focusLost(FocusEvent e) {
			actorTFfocusLost(e);
			
		}
    });
    
    DirectorjTextField.addFocusListener(new FocusListener() {
    	public void focusGained(FocusEvent e) {
    		directorTFfocusGained(e);
    
    	}

		@Override
		public void focusLost(FocusEvent e) {
			directorTFfocusLost(e);
			
		}
    });
    
    LinkjTextField.addFocusListener(new FocusListener() {
    	public void focusGained(FocusEvent e) {
    		ytTFfocusGained(e);
    
    	}

		@Override
		public void focusLost(FocusEvent e) {
			ytTFfocusLost(e);
			
		}
    });
    
    DurationjTextField.addKeyListener(new KeyListener() {
    	public void keyTyped(KeyEvent e) {
    		durationTFkeyTyped(e);
    	}

		@Override
		public void keyPressed(KeyEvent e) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void keyReleased(KeyEvent e) {
			// TODO Auto-generated method stub
			
		}
    });
    
    PgRatingLabel.setText("PG - Rating");

    GenreLabel.setText("Genre");

    PgRatingCB.setForeground(new java.awt.Color(204, 204, 204));
    PgRatingCB.setModel(new DefaultComboBoxModel<>(new String[] {"Select Rating", "U", "PG", "12A", "12", "15", "15A", "18"}));

    GenrejTextField.setForeground(new java.awt.Color(204, 204, 204));
    GenrejTextField.setText("Genre");

    DurationjTextField.setDocument(new JTextFieldLimit(3));
    DurationjTextField.setForeground(new java.awt.Color(204, 204, 204));
    DurationjTextField.setText("Min");

    DurationLabel.setText("Duration (mins)");

    ActorjTextField.setForeground(new java.awt.Color(204, 204, 204));
    ActorjTextField.setText("Actor");

    ActorLabel.setText("Actor");
    
    DirectorjTextField.setForeground(new java.awt.Color(204, 204, 204));
    DirectorjTextField.setText("Director");

    DirectorLabel.setText("Director");

    LinkLabel.setText("Youtube Link");

    LinkjTextField.setForeground(new java.awt.Color(204, 204, 204));
    LinkjTextField.setText("Youtube Link");
    
    JLabel lblNewLabel = new JLabel("Synopsis");
    lblNewLabel.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    
    txtSynopsis = new JTextField();
    txtSynopsis.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    txtSynopsis.setForeground(Color.LIGHT_GRAY);
    txtSynopsis.setText("Synopsis");
    txtSynopsis.setColumns(10);
    
    JLabel lblNewLabel_1 = new JLabel("Poster");
    lblNewLabel_1.setFont(new Font("Lucida Grande", Font.PLAIN, 39));
    
    JButton btnNewButton = new JButton("Edit Poster");
    btnNewButton.setFont(new Font("Lucida Grande", Font.PLAIN, 32));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    layout.setHorizontalGroup(
    	layout.createParallelGroup(Alignment.LEADING)
    		.addGroup(layout.createSequentialGroup()
    			.addGap(657)
    			.addComponent(jLabel1)
    			.addContainerGap(3048, Short.MAX_VALUE))
    		.addGroup(layout.createSequentialGroup()
    			.addGap(24)
    			.addGroup(layout.createParallelGroup(Alignment.LEADING)
    				.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
    					.addGroup(layout.createParallelGroup(Alignment.LEADING)
    						.addComponent(TitleLabel)
    						.addComponent(PgRatingLabel)
    						.addComponent(GenreLabel)
    						.addComponent(DurationLabel))
    					.addGap(28)
    					.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
    						.addComponent(TitleTextField1)
    						.addComponent(PgRatingCB, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    						.addComponent(GenrejTextField)
    						.addComponent(DurationjTextField)
    						.addComponent(ActorjTextField, GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)))
    				.addGroup(layout.createSequentialGroup()
    					.addGroup(layout.createParallelGroup(Alignment.LEADING)
    						.addComponent(DirectorLabel)
    						.addComponent(ActorLabel)
    						.addComponent(lblNewLabel)
    						.addComponent(lblNewLabel_1)
    						.addComponent(LinkLabel))
    					.addGap(73)
    					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
    						.addComponent(LinkjTextField, GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)
    						.addComponent(DirectorjTextField, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)
    						.addComponent(txtSynopsis, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)
    						.addGroup(layout.createSequentialGroup()
    							.addComponent(btnNewButton)
    							.addPreferredGap(ComponentPlacement.RELATED, 377, Short.MAX_VALUE)
    							.addComponent(Cancel, GroupLayout.PREFERRED_SIZE, 155, GroupLayout.PREFERRED_SIZE)
    							.addPreferredGap(ComponentPlacement.UNRELATED)
    							.addComponent(editBt, GroupLayout.PREFERRED_SIZE, 151, GroupLayout.PREFERRED_SIZE)))))
    			.addGap(2598))
    );
    layout.setVerticalGroup(
    	layout.createParallelGroup(Alignment.TRAILING)
    		.addGroup(layout.createSequentialGroup()
    			.addContainerGap()
    			.addComponent(jLabel1)
    			.addGap(18)
    			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    				.addComponent(TitleLabel)
    				.addComponent(TitleTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
    			.addPreferredGap(ComponentPlacement.RELATED)
    			.addGroup(layout.createParallelGroup(Alignment.LEADING)
    				.addComponent(PgRatingLabel)
    				.addComponent(PgRatingCB, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE))
    			.addPreferredGap(ComponentPlacement.UNRELATED)
    			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    				.addComponent(GenreLabel)
    				.addComponent(GenrejTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
    			.addPreferredGap(ComponentPlacement.RELATED)
    			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    				.addComponent(DurationLabel)
    				.addComponent(DurationjTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
    			.addGap(10)
    			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    				.addComponent(ActorLabel)
    				.addComponent(ActorjTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
    			.addGap(18)
    			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    				.addComponent(DirectorLabel)
    				.addComponent(DirectorjTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
    			.addPreferredGap(ComponentPlacement.UNRELATED)
    			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    				.addComponent(LinkjTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
    				.addComponent(LinkLabel))
    			.addGap(11)
    			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    				.addComponent(txtSynopsis, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
    				.addComponent(lblNewLabel))
    			.addPreferredGap(ComponentPlacement.RELATED)
    			.addGroup(layout.createParallelGroup(Alignment.LEADING)
    				.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    					.addComponent(editBt, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
    					.addComponent(Cancel))
    				.addGroup(layout.createParallelGroup(Alignment.BASELINE)
    					.addComponent(btnNewButton)
    					.addComponent(lblNewLabel_1)))
    			.addGap(254))
    );
    getContentPane().setLayout(layout);

    pack();
}// </editor-fold>//GEN-END:initComponents

private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
   JComponent comp = (JComponent) evt.getSource();
     Window win = SwingUtilities.getWindowAncestor(comp);
     win.dispose(); 
}//GEN-LAST:event_CancelActionPerformed

private void addBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
   String title, rating, genre, durationString, actor, director, ytLink;
   int duration = 0;
   title = TitleTextField1.getText();
   rating = PgRatingCB.getSelectedItem().toString();
   genre = GenrejTextField.getText();
   durationString = DurationjTextField.getText();
	   try {
		duration = Integer.parseInt(durationString);
	   }catch(Exception e) {
  
	   }
	  // duration = Integer.parseInt(durationString);
	   actor = ActorjTextField.getText();
	   director = DirectorjTextField.getText();
	   ytLink = LinkjTextField.getText();
	   
	   if(title.equals("Film Title")) {
		JOptionPane.showMessageDialog(null,  "Please enter a vaild Film Title");
	   }
	   else if(rating.equals("PG _ Rating")) {
		JOptionPane.showMessageDialog(null,  "Please enter a vaild Rating");
	   }
	   else if(genre.equals("Genre")) {
		JOptionPane.showMessageDialog(null,  "Please enter a vaild Genre");
	   }
	   else if(durationString.equals("Min") || duration < 60 || duration > 300) {
		JOptionPane.showMessageDialog(null,  "Please enter a vaild Duration\nPlease note films are never shorter than 60 minutes\nor longer than 300 minutes");
	   }
	   else if(actor.equals("Actor")) {
		JOptionPane.showMessageDialog(null,  "Please enter vaild Actor/s name");
	   }
	   else if(ytLink.equals("Youtube Link")) {
		JOptionPane.showMessageDialog(null,  "Please enter a vaild Youtube link");
	   }
	   else {
		Film newFilm = new Film(title, rating, genre, duration, actor, director, ytLink); 
	
		newFilm.addFilmToDB();
		
		JOptionPane.showMessageDialog(null,  "Film sucessfully edited");

	   }
}




private void genreTFfocusGained(FocusEvent e) {
	if(GenrejTextField.getText().equals("Genre")) {
		GenrejTextField.setText("");
	}
	
}

private void genreTFfocusLost(FocusEvent e) {
	if(GenrejTextField.getText().equals("")) {
		GenrejTextField.setText("Genre");
	}
	
}

private void durationTFfocusGained(FocusEvent e) {
	if(DurationjTextField.getText().equals("Min")) {
		DurationjTextField.setText("");
	}
	
}

private void durationTFfocusLost(FocusEvent e) {
	if(DurationjTextField.getText().equals("")) {
		DurationjTextField.setText("Min");
	}
	
}

private void actorTFfocusGained(FocusEvent e) {
	if(ActorjTextField.getText().equals("Actor")) {
		ActorjTextField.setText("");
	}
	
}

private void actorTFfocusLost(FocusEvent e) {
	if(ActorjTextField.getText().equals("")) {
		ActorjTextField.setText("Actor");
	}
	
}

private void directorTFfocusGained(FocusEvent e) {
	if(DirectorjTextField.getText().equals("Director")) {
		DirectorjTextField.setText("");
	}
	
}

private void directorTFfocusLost(FocusEvent e) {
	if(DirectorjTextField.getText().equals("")) {
		DirectorjTextField.setText("Director");
	}
	
}


private void ytTFfocusGained(FocusEvent e) {
	if(LinkjTextField.getText().equals("Youtube Link")) {
		LinkjTextField.setText("");
	}
	
}

private void ytTFfocusLost(FocusEvent e) {
	if(LinkjTextField.getText().equals("")) {
		LinkjTextField.setText("Youtube Link");
	}
}

private void durationTFkeyTyped(KeyEvent e) {
	char c = e.getKeyChar();
	if(!(Character.isDigit(c)) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE) {
		e.consume();
	}
	
}
	

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(AddFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(AddFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(AddFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(AddFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            
            EditFilm frame = new EditFilm();
            
            frame.setExtendedState(JFrame.MAXIMIZED_BOTH); 
            
            frame.setVisible(true);    
        	
        }
    });
}

// Variables declaration - do not modify//GEN-BEGIN:variables
private javax.swing.JLabel ActorLabel;
private javax.swing.JTextField ActorjTextField;
private javax.swing.JButton Cancel;
private javax.swing.JLabel DirectorLabel;
private javax.swing.JTextField DirectorjTextField;
private javax.swing.JLabel DurationLabel;
private javax.swing.JTextField DurationjTextField;
private javax.swing.JLabel GenreLabel;
private javax.swing.JTextField GenrejTextField;
private javax.swing.JLabel LinkLabel;
private javax.swing.JTextField LinkjTextField;
private javax.swing.JLabel PgRatingLabel;
private javax.swing.JComboBox PgRatingCB;
private javax.swing.JLabel TitleLabel;
public static javax.swing.JTextField TitleTextField1;
private javax.swing.JButton editBt;
private javax.swing.JLabel jLabel1;
private JTextField txtSynopsis;
}
